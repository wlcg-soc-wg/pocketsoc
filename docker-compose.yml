version: '3'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.5.1
    container_name: elasticsearch
    hostname: elasticsearch
    volumes:
      - ./components/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      #- ./volumes/elasticsearch/config/mapping.json:/config/mapping.json:ro
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      mirror:
        ipv4_address: 172.20.0.50

  logstash-zeek:
    image: docker.elastic.co/logstash/logstash-oss:7.3.2
    container_name: logstash-zeek
    hostname: logstash-zeek
    volumes:
      - ./components/logstash-zeek/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./components/logstash-zeek/pipeline:/usr/share/logstash/pipeline:ro
      - ./components/logstash-zeek/mappings:/usr/share/logstash/mappings:ro
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      mirror:
        ipv4_address: 172.20.0.51
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.5.1
    container_name: kibana
    hostname: kibana
    volumes:
      - ./components/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "8080:5601"
    networks:
      mirror:
        ipv4_address: 172.20.0.52
    depends_on:
      - elasticsearch

  logstash-flow:
    build: ./components/logstash-flow/
    container_name: logstash-flow
    hostname: logstash-flow
    volumes:
      - ./components/logstash-flow/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./components/logstash-flow/elastiflow.sh:/etc/profile.d/elastiflow.sh:ro
      - ./components/logstash-flow/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./volumes/logstash-flow/pipeline:/usr/share/logstash/pipeline:ro
      - ./volumes/logstash-flow/elastiflow:/usr/share/logstash/elastiflow:ro
    environment:
      LS_JAVA_OPTS: "-Xmx2g -Xms2g"
    networks:
      mirror:
        ipv4_address: 172.20.0.53
    depends_on:
      - elasticsearch

  elastalert:
    build: ./components/elastalert/
    container_name: elastalert
    hostname: elastalert
    volumes:
      - ./components/elastalert/config/:/config
    restart: always
    networks:
      mirror:
    depends_on:
      - elasticsearch

#  apache:
#    build: ./components/apache/
#    restart: always
#    networks:
#      external:

  memcached:
    build: ./components/memcached/
    container_name: memcached
    hostname: memcached
    networks:
      mirror:
        ipv4_address: 172.20.0.55

  download:
    build: ./components/download/
    container_name: download
    hostname: download
    networks:
      external:
        ipv4_address: 172.19.0.67

  target:
    build: ./components/target/
    container_name: target
    hostname: target
    networks:
      external:
        ipv4_address: 172.19.0.77

#  flask:
#    build: ./components/flask/
#    restart: always
#    networks:
#      external:
#
#  ssh:
#    build: ./components/ssh/
#    restart: always
#    networks:
#      external:

  client:
    build: ./components/client/
    container_name: client
    hostname: client
    volumes:
      - ./components/client/files/:/files
    dns:
      - "172.18.0.100"
    cap_add:
      - NET_ADMIN  
    networks:
      internal:
        ipv4_address: 172.18.0.15

  zeek:
    build: ./components/zeek/
    container_name: zeek
    hostname: zeek
    volumes:
      - ./components/zeek/config/opt/bro/share/bro/site/local.bro:/opt/bro/share/bro/site/local.bro:ro
      - ./components/zeek/config/etc/filebeat/filebeat.yml:/etc/filebeat/filebeat.yml:ro
      - ./components/zeek/pcaps:/pcaps
    cap_add:
      - NET_ADMIN
    networks:
      mirror:
        ipv4_address: 172.20.0.15

  router:
    build: ./components/router/
    container_name: router
    hostname: router
    volumes:
      - ./components/router/files/:/files
    cap_add:
      - NET_ADMIN
    networks:
      mirror:
        ipv4_address: 172.20.0.100
      internal:
        ipv4_address: 172.18.0.100
      external:
        ipv4_address: 172.19.0.100
    depends_on:
      - kibana

  misp:
    build: 
      context: repos/docker-misp/container/
      args:
        MYSQL_MISP_PASSWORD: "misp" 
        POSTFIX_RELAY_HOST: "localhost"
        MISP_FQDN: "${MISP_HOST}:8443"
        MISP_EMAIL: "admin@localhost"
        MISP_GPG_PASSWORD: "misp"
    container_name: misp
    hostname: misp
    image: harvarditsecurity/misp
    volumes:
      - ./volumes/mispdb:/var/lib/mysql
    ports:
      - 8443:443
    networks:
      mirror:
        ipv4_address: 172.20.0.20

networks:
  mirror:
    external:
      name: mirror
  internal:
    external:
      name: internal
  external:
    external:
      name: external
